/* This file was generated by SableCC (http://www.sablecc.org/). */

package lexer;

import java.io.*;
import node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTraditionalComment(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocumentationComment(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndOfLineComment(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrace(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrace(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLParen(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRParen(line, pos); }
    Token new7(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDataType(text, line, pos); }
    Token new8(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumericConstant(text, line, pos); }
    Token new9(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTextLiteral(text, line, pos); }
    Token new10(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeyword(text, line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {33, 33, 6}, {34, 34, 7}, {35, 35, 8}, {37, 37, 9}, {38, 38, 10}, {39, 39, 11}, {40, 40, 12}, {41, 41, 13}, {42, 42, 14}, {43, 43, 15}, {44, 44, 16}, {45, 45, 17}, {46, 46, 18}, {47, 47, 19}, {48, 48, 20}, {49, 57, 21}, {60, 60, 22}, {61, 61, 23}, {62, 62, 24}, {63, 63, 25}, {65, 75, 26}, {76, 76, 27}, {77, 90, 26}, {94, 94, 28}, {95, 95, 29}, {97, 97, 30}, {98, 98, 31}, {99, 99, 32}, {100, 100, 33}, {101, 101, 34}, {102, 102, 35}, {103, 103, 36}, {104, 104, 37}, {105, 105, 38}, {106, 107, 37}, {108, 108, 39}, {109, 109, 40}, {110, 110, 41}, {111, 111, 42}, {112, 112, 43}, {113, 113, 37}, {114, 114, 44}, {115, 115, 45}, {116, 116, 46}, {117, 117, 47}, {118, 118, 48}, {119, 119, 49}, {120, 122, 37}, {123, 123, 50}, {124, 124, 51}, {125, 125, 52}, {126, 126, 53}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 54}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 55}, },
            {{0, 9, 56}, {11, 12, 56}, {14, 33, 56}, {34, 34, 57}, {35, 91, 56}, {92, 92, 58}, {93, 255, 56}, },
            {{100, 100, 59}, {101, 101, 60}, {105, 105, 61}, {112, 112, 62}, },
            {},
            {{38, 38, 63}, },
            {{0, 9, 64}, {11, 12, 64}, {14, 38, 64}, {40, 91, 64}, {92, 92, 65}, {93, 255, 64}, },
            {},
            {},
            {},
            {{43, 43, 66}, },
            {},
            {{45, 45, 67}, },
            {{48, 57, 68}, },
            {{42, 42, 69}, {47, 47, 70}, },
            {{46, 46, 71}, {48, 55, 72}, {56, 57, 73}, {68, 68, 74}, {69, 69, 75}, {88, 88, 76}, {100, 100, 77}, {101, 101, 78}, {120, 120, 79}, },
            {{46, 46, 71}, {48, 57, 80}, {68, 69, -22}, {100, 101, -22}, },
            {{60, 60, 81}, {61, 61, 82}, },
            {{61, 61, 83}, },
            {{61, 61, 84}, {62, 62, 85}, },
            {{58, 58, 86}, },
            {{48, 57, 87}, {65, 90, 88}, {95, 95, 89}, {97, 122, 90}, },
            {{34, 34, 91}, {39, 39, 92}, {48, 122, -28}, },
            {},
            {{48, 122, -28}, },
            {{48, 95, -28}, {97, 97, 90}, {98, 98, 93}, {99, 109, 90}, {110, 110, 94}, {111, 114, 90}, {115, 115, 95}, {116, 116, 96}, {117, 117, 97}, {118, 122, 90}, },
            {{48, 95, -28}, {97, 110, 90}, {111, 111, 98}, {112, 113, 90}, {114, 114, 99}, {115, 122, 90}, },
            {{48, 95, -28}, {97, 97, 100}, {98, 103, 90}, {104, 104, 101}, {105, 107, 90}, {108, 108, 102}, {109, 110, 90}, {111, 111, 103}, {112, 116, 90}, {117, 117, 104}, {118, 122, 90}, },
            {{48, 95, -28}, {97, 100, 90}, {101, 101, 105}, {102, 110, 90}, {111, 111, 106}, {112, 120, 90}, {121, 121, 107}, {122, 122, 90}, },
            {{48, 95, -28}, {97, 107, 90}, {108, 108, 108}, {109, 109, 90}, {110, 110, 109}, {111, 119, 90}, {120, 120, 110}, {121, 122, 90}, },
            {{48, 95, -28}, {97, 97, 111}, {98, 104, 90}, {105, 105, 112}, {106, 107, 90}, {108, 108, 113}, {109, 110, 90}, {111, 111, 114}, {112, 113, 90}, {114, 114, 115}, {115, 122, 90}, },
            {{48, 110, -33}, {111, 111, 116}, {112, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 95, -28}, {97, 101, 90}, {102, 102, 117}, {103, 109, 90}, {110, 110, 118}, {111, 122, 90}, },
            {{48, 110, -33}, {111, 111, 119}, {112, 122, 90}, },
            {{48, 110, -33}, {111, 111, 120}, {112, 116, 90}, {117, 117, 121}, {118, 122, 90}, },
            {{48, 95, -28}, {97, 97, 122}, {98, 100, 90}, {101, 101, 123}, {102, 122, 90}, },
            {{48, 97, -32}, {98, 98, 124}, {99, 99, 125}, {100, 109, 90}, {110, 110, 126}, {111, 111, 90}, {112, 112, 127}, {113, 116, 90}, {117, 117, 128}, {118, 122, 90}, },
            {{48, 95, -28}, {97, 113, 90}, {114, 114, 129}, {115, 116, 90}, {117, 117, 130}, {118, 122, 90}, },
            {{48, 95, -28}, {97, 97, 131}, {98, 100, 90}, {101, 101, 132}, {102, 122, 90}, },
            {{48, 100, -35}, {101, 101, 133}, {102, 103, 90}, {104, 104, 134}, {105, 105, 135}, {106, 115, 90}, {116, 116, 136}, {117, 117, 137}, {118, 118, 90}, {119, 119, 138}, {120, 122, 90}, },
            {{48, 100, -35}, {101, 101, 139}, {102, 103, 90}, {104, 104, 140}, {105, 113, 90}, {114, 114, 141}, {115, 120, 90}, {121, 121, 142}, {122, 122, 90}, },
            {{48, 95, -28}, {97, 109, 90}, {110, 110, 143}, {111, 114, 90}, {115, 115, 144}, {116, 122, 90}, },
            {{48, 95, -28}, {97, 97, 145}, {98, 104, 90}, {105, 105, 146}, {106, 110, 90}, {111, 111, 147}, {112, 122, 90}, },
            {{48, 95, -28}, {97, 98, 90}, {99, 99, 148}, {100, 103, 90}, {104, 104, 149}, {105, 114, 90}, {115, 115, 150}, {116, 122, 90}, },
            {},
            {{124, 124, 151}, },
            {},
            {},
            {{9, 32, -2}, },
            {},
            {{0, 255, -9}, },
            {},
            {{34, 34, 152}, {39, 39, 153}, {48, 55, 154}, {85, 85, 155}, {88, 88, 156}, {92, 92, 157}, {97, 97, 158}, {98, 98, 159}, {102, 102, 160}, {110, 110, 161}, {114, 114, 162}, {116, 116, 163}, {117, 117, 164}, {118, 118, 165}, {120, 120, 166}, },
            {{101, 101, 167}, },
            {{110, 110, 168}, },
            {{102, 102, 169}, {110, 110, 170}, },
            {{114, 114, 171}, },
            {},
            {{39, 39, 172}, },
            {{34, 34, 173}, {39, 39, 174}, {48, 55, 175}, {85, 85, 176}, {88, 88, 177}, {92, 92, 178}, {97, 97, 179}, {98, 98, 180}, {102, 102, 181}, {110, 110, 182}, {114, 114, 183}, {116, 116, 184}, {117, 117, 185}, {118, 118, 186}, {120, 120, 187}, },
            {},
            {},
            {{48, 57, 68}, {68, 68, 188}, {69, 69, 189}, {100, 100, 190}, {101, 101, 191}, },
            {{0, 9, 192}, {10, 10, 193}, {11, 12, 192}, {13, 13, 194}, {14, 41, 192}, {42, 42, 195}, {43, 255, 192}, },
            {{0, 9, 196}, {10, 10, 197}, {11, 12, 196}, {13, 13, 198}, {14, 255, 196}, },
            {{48, 57, 199}, {68, 68, 200}, {69, 69, 201}, {100, 100, 202}, {101, 101, 203}, },
            {{46, 69, -22}, {100, 101, -22}, },
            {{46, 46, 71}, {48, 57, 73}, {68, 101, -23}, },
            {},
            {{43, 43, 204}, {45, 45, 205}, {48, 57, 206}, },
            {{48, 57, 207}, {65, 70, 208}, {97, 102, 209}, },
            {},
            {{43, 57, -77}, },
            {{48, 102, -78}, },
            {{46, 101, -23}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{0, 9, 210}, {11, 12, 210}, {14, 33, 210}, {34, 34, 211}, {35, 91, 210}, {92, 92, 212}, {93, 65535, 210}, },
            {{0, 9, 213}, {11, 12, 213}, {14, 38, 213}, {40, 91, 213}, {92, 92, 214}, {93, 65535, 213}, },
            {{48, 95, -28}, {97, 114, 90}, {115, 115, 215}, {116, 122, 90}, },
            {{48, 95, -28}, {97, 120, 90}, {121, 121, 216}, {122, 122, 90}, },
            {{48, 95, -28}, {97, 108, 90}, {109, 109, 217}, {110, 122, 90}, },
            {{48, 95, -28}, {97, 115, 90}, {116, 116, 218}, {117, 122, 90}, },
            {{48, 115, -98}, {116, 116, 219}, {117, 122, 90}, },
            {{48, 110, -33}, {111, 111, 220}, {112, 122, 90}, },
            {{48, 100, -35}, {101, 101, 221}, {102, 122, 90}, },
            {{48, 114, -95}, {115, 115, 222}, {116, 116, 223}, {117, 122, 90}, },
            {{48, 95, -28}, {97, 97, 224}, {98, 122, 90}, },
            {{48, 95, -28}, {97, 97, 225}, {98, 122, 90}, },
            {{48, 109, -49}, {110, 110, 226}, {111, 116, 90}, {117, 117, 227}, {118, 122, 90}, },
            {{48, 114, -95}, {115, 115, 228}, {116, 122, 90}, },
            {{48, 101, -40}, {102, 102, 229}, {103, 107, 90}, {108, 108, 230}, {109, 122, 90}, },
            {{48, 95, -28}, {97, 116, 90}, {117, 117, 231}, {118, 122, 90}, },
            {{48, 109, -49}, {110, 110, 232}, {111, 122, 90}, },
            {{48, 114, -95}, {115, 115, 233}, {116, 122, 90}, },
            {{48, 95, -28}, {97, 99, 90}, {100, 100, 234}, {101, 116, 90}, {117, 117, 235}, {118, 122, 90}, },
            {{48, 98, -51}, {99, 99, 236}, {100, 111, 90}, {112, 112, 237}, {113, 115, 90}, {116, 116, 238}, {117, 122, 90}, },
            {{48, 98, -51}, {99, 99, 239}, {100, 107, 90}, {108, 108, 240}, {109, 122, 90}, },
            {{48, 95, -28}, {97, 119, 90}, {120, 120, 241}, {121, 122, 90}, },
            {{48, 110, -33}, {111, 111, 242}, {112, 122, 90}, },
            {{48, 113, -45}, {114, 114, 243}, {115, 122, 90}, },
            {{48, 95, -28}, {97, 104, 90}, {105, 105, 244}, {106, 122, 90}, },
            {{48, 115, -98}, {116, 116, 245}, {117, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 107, -36}, {108, 108, 246}, {109, 110, 90}, {111, 111, 247}, {112, 115, 90}, {116, 116, 248}, {117, 122, 90}, },
            {{48, 109, -49}, {110, 110, 249}, {111, 122, 90}, },
            {{48, 99, -111}, {100, 100, 250}, {101, 122, 90}, },
            {{48, 115, -98}, {116, 116, 251}, {117, 122, 90}, },
            {{48, 108, -97}, {109, 109, 252}, {110, 115, 90}, {116, 116, 253}, {117, 122, 90}, },
            {{48, 95, -28}, {97, 118, 90}, {119, 119, 254}, {120, 122, 90}, },
            {{48, 95, -28}, {97, 105, 90}, {106, 106, 255}, {107, 122, 90}, },
            {{48, 115, -98}, {116, 116, 256}, {117, 122, 90}, },
            {{48, 100, -35}, {101, 101, 257}, {102, 122, 90}, },
            {{48, 100, -35}, {101, 101, 258}, {102, 122, 90}, },
            {{48, 115, -98}, {116, 116, 259}, {117, 122, 90}, },
            {{48, 104, -117}, {105, 105, 260}, {106, 110, 90}, {111, 111, 261}, {112, 122, 90}, },
            {{48, 97, -32}, {98, 98, 262}, {99, 122, 90}, },
            {{48, 104, -117}, {105, 105, 263}, {106, 122, 90}, },
            {{48, 95, -28}, {97, 97, 264}, {98, 102, 90}, {103, 103, 265}, {104, 104, 90}, {105, 105, 266}, {106, 115, 90}, {116, 116, 267}, {117, 122, 90}, },
            {{48, 95, -28}, {97, 112, 90}, {113, 113, 268}, {114, 122, 90}, },
            {{48, 110, -33}, {111, 111, 269}, {112, 122, 90}, },
            {{48, 95, -28}, {97, 102, 90}, {103, 103, 270}, {104, 121, 90}, {122, 122, 271}, },
            {{48, 95, -28}, {97, 97, 272}, {98, 113, 90}, {114, 114, 273}, {115, 122, 90}, },
            {{48, 95, -28}, {97, 111, 90}, {112, 112, 274}, {113, 122, 90}, },
            {{48, 104, -117}, {105, 105, 275}, {106, 122, 90}, },
            {{48, 108, -97}, {109, 109, 276}, {110, 122, 90}, },
            {{48, 104, -117}, {105, 105, 277}, {106, 113, 90}, {114, 114, 278}, {115, 122, 90}, },
            {{48, 116, -108}, {117, 117, 279}, {118, 120, 90}, {121, 121, 280}, {122, 122, 90}, },
            {{48, 111, -139}, {112, 112, 281}, {113, 122, 90}, },
            {{48, 104, -117}, {105, 105, 282}, {106, 114, 90}, {115, 115, 283}, {116, 122, 90}, },
            {{48, 104, -117}, {105, 105, 284}, {106, 122, 90}, },
            {{48, 107, -36}, {108, 108, 285}, {109, 122, 90}, },
            {{48, 113, -45}, {114, 114, 286}, {115, 122, 90}, },
            {{48, 104, -117}, {105, 105, 287}, {106, 107, 90}, {108, 108, 288}, {109, 122, 90}, },
            {{48, 95, -28}, {97, 103, 90}, {104, 104, 289}, {105, 122, 90}, },
            {{48, 104, -117}, {105, 105, 290}, {106, 122, 90}, },
            {{48, 115, -98}, {116, 116, 291}, {117, 122, 90}, },
            {},
            {{0, 255, -9}, },
            {{0, 255, -9}, },
            {{0, 34, -9}, {35, 47, 56}, {48, 55, 292}, {56, 91, 56}, {92, 255, -9}, },
            {{48, 57, 293}, {65, 70, 294}, {97, 102, 295}, },
            {{48, 57, 296}, {65, 70, 297}, {97, 102, 298}, },
            {{0, 255, -9}, },
            {{0, 255, -9}, },
            {{0, 255, -9}, },
            {{0, 255, -9}, },
            {{0, 255, -9}, },
            {{0, 255, -9}, },
            {{0, 255, -9}, },
            {{48, 102, -157}, },
            {{0, 255, -9}, },
            {{48, 102, -158}, },
            {{102, 102, 299}, },
            {{100, 100, 300}, },
            {{110, 110, 301}, },
            {{99, 99, 302}, },
            {{97, 97, 303}, },
            {},
            {{39, 39, 172}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, {48, 55, 304}, },
            {{48, 57, 305}, {65, 70, 306}, {97, 102, 307}, },
            {{48, 57, 308}, {65, 70, 309}, {97, 102, 310}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, },
            {{48, 102, -178}, },
            {{39, 39, 172}, },
            {{48, 102, -179}, },
            {},
            {{43, 43, 311}, {45, 45, 312}, {48, 57, 313}, },
            {},
            {{43, 57, -191}, },
            {{0, 41, -71}, {42, 42, 314}, {43, 255, 192}, },
            {{0, 255, -194}, },
            {{0, 9, 192}, {10, 10, 315}, {11, 255, -194}, },
            {{0, 9, 316}, {10, 10, 317}, {11, 12, 316}, {13, 13, 318}, {14, 41, 316}, {42, 42, 319}, {43, 46, 316}, {47, 47, 320}, {48, 255, 316}, },
            {{0, 255, -72}, },
            {},
            {{10, 10, 321}, },
            {{48, 101, -73}, },
            {},
            {{43, 43, 322}, {45, 45, 323}, {48, 57, 324}, },
            {},
            {{43, 57, -203}, },
            {{48, 57, 206}, },
            {{48, 57, 206}, },
            {{48, 57, 206}, },
            {{48, 102, -78}, },
            {{48, 102, -78}, },
            {{48, 102, -78}, },
            {{0, 65535, -93}, },
            {},
            {{34, 34, 325}, {39, 39, 326}, {48, 55, 327}, {85, 85, 328}, {88, 88, 329}, {92, 92, 330}, {97, 97, 331}, {98, 98, 332}, {102, 102, 333}, {110, 110, 334}, {114, 114, 335}, {116, 116, 336}, {117, 117, 337}, {118, 118, 338}, {120, 120, 339}, },
            {{39, 39, 340}, },
            {{34, 34, 341}, {39, 39, 342}, {48, 55, 343}, {85, 85, 344}, {88, 88, 345}, {92, 92, 346}, {97, 97, 347}, {98, 98, 348}, {102, 102, 349}, {110, 110, 350}, {114, 114, 351}, {116, 116, 352}, {117, 117, 353}, {118, 118, 354}, {120, 120, 355}, },
            {{48, 115, -98}, {116, 116, 356}, {117, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 113, -45}, {114, 114, 357}, {115, 122, 90}, },
            {{48, 110, -33}, {111, 111, 358}, {112, 122, 90}, },
            {{48, 107, -36}, {108, 108, 359}, {109, 122, 90}, },
            {{48, 95, -28}, {97, 97, 360}, {98, 122, 90}, },
            {{48, 100, -35}, {101, 101, 361}, {102, 122, 90}, },
            {{48, 98, -51}, {99, 99, 362}, {100, 122, 90}, },
            {{48, 113, -45}, {114, 114, 363}, {115, 122, 90}, },
            {{48, 114, -95}, {115, 115, 364}, {116, 122, 90}, },
            {{48, 114, -95}, {115, 115, 365}, {116, 116, 366}, {117, 122, 90}, },
            {{48, 115, -98}, {116, 116, 367}, {117, 122, 90}, },
            {{48, 115, -98}, {116, 116, 368}, {117, 122, 90}, },
            {{48, 95, -28}, {97, 97, 369}, {98, 122, 90}, },
            {{48, 100, -35}, {101, 101, 370}, {102, 122, 90}, },
            {{48, 97, -32}, {98, 98, 371}, {99, 122, 90}, },
            {{48, 95, -28}, {97, 97, 372}, {98, 122, 90}, },
            {{48, 100, -35}, {101, 101, 373}, {102, 122, 90}, },
            {{48, 107, -36}, {108, 108, 374}, {109, 122, 90}, },
            {{48, 108, -97}, {109, 109, 375}, {110, 122, 90}, },
            {{48, 100, -35}, {101, 101, 376}, {102, 122, 90}, },
            {{48, 107, -36}, {108, 108, 377}, {109, 110, 90}, {111, 111, 378}, {112, 122, 90}, },
            {{48, 100, -35}, {101, 101, 379}, {102, 122, 90}, },
            {{48, 115, -98}, {116, 116, 380}, {117, 122, 90}, },
            {{48, 114, -95}, {115, 115, 381}, {116, 122, 90}, },
            {{48, 100, -35}, {101, 101, 382}, {102, 122, 90}, },
            {{48, 95, -28}, {97, 97, 383}, {98, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 384}, {102, 122, 90}, },
            {{48, 110, -33}, {111, 111, 385}, {112, 122, 90}, },
            {{48, 104, -117}, {105, 105, 386}, {106, 122, 90}, },
            {{48, 116, -108}, {117, 117, 387}, {118, 122, 90}, },
            {{48, 100, -35}, {101, 101, 388}, {102, 122, 90}, },
            {{48, 102, -137}, {103, 103, 389}, {104, 122, 90}, },
            {{48, 116, -108}, {117, 117, 390}, {118, 122, 90}, },
            {{48, 95, -28}, {97, 97, 391}, {98, 122, 90}, },
            {{48, 100, -35}, {101, 101, 392}, {102, 122, 90}, },
            {{48, 104, -117}, {105, 105, 393}, {106, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 394}, {102, 122, 90}, },
            {{48, 100, -35}, {101, 101, 395}, {102, 122, 90}, },
            {{48, 118, -125}, {119, 119, 396}, {120, 122, 90}, },
            {{48, 113, -45}, {114, 114, 397}, {115, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 95, -28}, {97, 117, 90}, {118, 118, 398}, {119, 122, 90}, },
            {{48, 115, -98}, {116, 116, 399}, {117, 122, 90}, },
            {{48, 107, -36}, {108, 108, 400}, {109, 122, 90}, },
            {{48, 114, -95}, {115, 115, 401}, {116, 122, 90}, },
            {{48, 99, -111}, {100, 100, 402}, {101, 122, 90}, },
            {{48, 104, -117}, {105, 105, 403}, {106, 122, 90}, },
            {{48, 109, -49}, {110, 110, 404}, {111, 122, 90}, },
            {{48, 116, -108}, {117, 117, 405}, {118, 122, 90}, },
            {{48, 116, -108}, {117, 117, 406}, {118, 122, 90}, },
            {{48, 113, -45}, {114, 114, 407}, {115, 122, 90}, },
            {{48, 109, -49}, {110, 110, 408}, {111, 122, 90}, },
            {{48, 100, -35}, {101, 101, 409}, {102, 122, 90}, },
            {{48, 115, -98}, {116, 116, 410}, {117, 122, 90}, },
            {{48, 104, -117}, {105, 105, 411}, {106, 116, 90}, {117, 117, 412}, {118, 122, 90}, },
            {{48, 111, -139}, {112, 112, 413}, {113, 122, 90}, },
            {{48, 115, -98}, {116, 116, 414}, {117, 122, 90}, },
            {{48, 111, -139}, {112, 112, 415}, {113, 122, 90}, },
            {{48, 114, -95}, {115, 115, 416}, {116, 122, 90}, },
            {{48, 110, -33}, {111, 111, 417}, {112, 122, 90}, },
            {{48, 100, -35}, {101, 101, 418}, {102, 109, 90}, {110, 110, 419}, {111, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 420}, {102, 122, 90}, },
            {{48, 110, -33}, {111, 111, 421}, {112, 122, 90}, },
            {{48, 104, -117}, {105, 105, 422}, {106, 122, 90}, },
            {{48, 109, -49}, {110, 110, 423}, {111, 122, 90}, },
            {{48, 116, -108}, {117, 117, 424}, {118, 122, 90}, },
            {{48, 115, -98}, {116, 116, 425}, {117, 122, 90}, },
            {{48, 99, -111}, {100, 100, 426}, {101, 122, 90}, },
            {{48, 95, -28}, {97, 97, 427}, {98, 122, 90}, },
            {{48, 95, -28}, {97, 97, 428}, {98, 122, 90}, },
            {{48, 107, -36}, {108, 108, 429}, {109, 122, 90}, },
            {{48, 113, -45}, {114, 114, 430}, {115, 122, 90}, },
            {{0, 47, -156}, {48, 55, 431}, {56, 255, -156}, },
            {{0, 47, -156}, {48, 57, 432}, {58, 64, 56}, {65, 70, 433}, {71, 91, 56}, {92, 92, 58}, {93, 96, 56}, {97, 102, 434}, {103, 255, 56}, },
            {{0, 255, -295}, },
            {{0, 255, -295}, },
            {{0, 47, -156}, {48, 57, 435}, {58, 64, 56}, {65, 70, 436}, {71, 96, -295}, {97, 102, 437}, {103, 255, 56}, },
            {{0, 255, -298}, },
            {{0, 255, -298}, },
            {{105, 105, 438}, },
            {{105, 105, 439}, },
            {{100, 100, 440}, },
            {{108, 108, 441}, },
            {{103, 103, 442}, },
            {{39, 39, 172}, {48, 55, 443}, },
            {{39, 39, 172}, {48, 57, 444}, {65, 70, 445}, {97, 102, 446}, },
            {{39, 102, -307}, },
            {{39, 102, -307}, },
            {{39, 39, 172}, {48, 57, 447}, {65, 70, 448}, {97, 102, 449}, },
            {{39, 102, -310}, },
            {{39, 102, -310}, },
            {{48, 57, 313}, },
            {{48, 57, 313}, },
            {{48, 57, 313}, },
            {{0, 9, 450}, {10, 10, 451}, {11, 12, 450}, {13, 13, 452}, {14, 41, 450}, {42, 42, 314}, {43, 46, 450}, {47, 47, 453}, {48, 255, 450}, },
            {{0, 255, -194}, },
            {{0, 9, 454}, {10, 10, 455}, {11, 12, 454}, {13, 13, 456}, {14, 41, 454}, {42, 42, 457}, {43, 255, 454}, },
            {{0, 255, -318}, },
            {{0, 9, 454}, {10, 10, 458}, {11, 255, -318}, },
            {{0, 255, -197}, },
            {},
            {},
            {{48, 57, 324}, },
            {{48, 57, 324}, },
            {{48, 57, 324}, },
            {{0, 65535, -93}, },
            {{0, 65535, -93}, },
            {{0, 34, -93}, {35, 47, 210}, {48, 55, 459}, {56, 91, 210}, {92, 65535, -93}, },
            {{48, 57, 460}, {65, 70, 461}, {97, 102, 462}, },
            {{48, 57, 463}, {65, 70, 464}, {97, 102, 465}, },
            {{0, 65535, -93}, },
            {{0, 65535, -93}, },
            {{0, 65535, -93}, },
            {{0, 65535, -93}, },
            {{0, 65535, -93}, },
            {{0, 65535, -93}, },
            {{0, 65535, -93}, },
            {{48, 102, -330}, },
            {{0, 65535, -93}, },
            {{48, 102, -331}, },
            {},
            {{39, 39, 340}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, {48, 55, 466}, },
            {{48, 57, 467}, {65, 70, 468}, {97, 102, 469}, },
            {{48, 57, 470}, {65, 70, 471}, {97, 102, 472}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, },
            {{48, 102, -346}, },
            {{39, 39, 340}, },
            {{48, 102, -347}, },
            {{48, 113, -45}, {114, 114, 473}, {115, 122, 90}, },
            {{48, 104, -117}, {105, 105, 474}, {106, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 475}, {102, 122, 90}, },
            {{48, 95, -28}, {97, 106, 90}, {107, 107, 476}, {108, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 103, -150}, {104, 104, 477}, {105, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 114, -95}, {115, 115, 478}, {116, 122, 90}, },
            {{48, 115, -98}, {116, 116, 479}, {117, 122, 90}, },
            {{48, 100, -35}, {101, 101, 480}, {102, 104, 90}, {105, 105, 481}, {106, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 110, -33}, {111, 111, 482}, {112, 122, 90}, },
            {{48, 116, -108}, {117, 117, 483}, {118, 122, 90}, },
            {{48, 115, -98}, {116, 116, 484}, {117, 122, 90}, },
            {{48, 107, -36}, {108, 108, 485}, {109, 122, 90}, },
            {{48, 108, -97}, {109, 109, 486}, {110, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 111, -139}, {112, 112, 487}, {113, 122, 90}, },
            {{48, 104, -117}, {105, 105, 488}, {106, 122, 90}, },
            {{48, 113, -45}, {114, 114, 489}, {115, 122, 90}, },
            {{48, 113, -45}, {114, 114, 490}, {115, 122, 90}, },
            {{48, 110, -33}, {111, 111, 491}, {112, 122, 90}, },
            {{48, 100, -35}, {101, 101, 492}, {102, 122, 90}, },
            {{48, 99, -111}, {100, 100, 493}, {101, 122, 90}, },
            {{48, 115, -98}, {116, 116, 494}, {117, 122, 90}, },
            {{48, 109, -49}, {110, 110, 495}, {111, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 109, -49}, {110, 110, 496}, {111, 122, 90}, },
            {{48, 115, -98}, {116, 116, 497}, {117, 122, 90}, },
            {{48, 113, -45}, {114, 114, 498}, {115, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 107, -36}, {108, 108, 499}, {109, 122, 90}, },
            {{48, 97, -32}, {98, 98, 500}, {99, 122, 90}, },
            {{48, 114, -95}, {115, 115, 501}, {116, 122, 90}, },
            {{48, 117, -262}, {118, 118, 502}, {119, 122, 90}, },
            {{48, 98, -51}, {99, 99, 503}, {100, 122, 90}, },
            {{48, 115, -98}, {116, 116, 504}, {117, 122, 90}, },
            {{48, 95, -28}, {97, 97, 505}, {98, 122, 90}, },
            {{48, 95, -28}, {97, 97, 506}, {98, 122, 90}, },
            {{48, 95, -28}, {97, 97, 507}, {98, 122, 90}, },
            {{48, 100, -35}, {101, 101, 508}, {102, 122, 90}, },
            {{48, 104, -117}, {105, 105, 509}, {106, 122, 90}, },
            {{48, 100, -35}, {101, 101, 510}, {102, 122, 90}, },
            {{48, 110, -33}, {111, 111, 511}, {112, 122, 90}, },
            {{48, 114, -95}, {115, 115, 512}, {116, 122, 90}, },
            {{48, 115, -98}, {116, 116, 513}, {117, 122, 90}, },
            {{48, 113, -45}, {114, 114, 514}, {115, 122, 90}, },
            {{48, 100, -35}, {101, 101, 515}, {102, 122, 90}, },
            {{48, 115, -98}, {116, 116, 516}, {117, 122, 90}, },
            {{48, 100, -35}, {101, 101, 517}, {102, 122, 90}, },
            {{48, 110, -33}, {111, 111, 518}, {112, 122, 90}, },
            {{48, 104, -117}, {105, 105, 519}, {106, 122, 90}, },
            {{48, 109, -49}, {110, 110, 520}, {111, 122, 90}, },
            {{48, 98, -51}, {99, 99, 521}, {100, 122, 90}, },
            {{48, 110, -33}, {111, 111, 522}, {112, 122, 90}, },
            {{48, 98, -51}, {99, 99, 523}, {100, 122, 90}, },
            {{48, 107, -36}, {108, 108, 524}, {109, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 118, -125}, {119, 119, 525}, {120, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 98, -51}, {99, 99, 526}, {100, 122, 90}, },
            {{48, 99, -111}, {100, 100, 527}, {101, 104, 90}, {105, 105, 528}, {106, 109, 90}, {110, 110, 529}, {111, 122, 90}, },
            {{48, 109, -49}, {110, 110, 530}, {111, 122, 90}, },
            {{48, 102, -137}, {103, 103, 531}, {104, 122, 90}, },
            {{48, 102, -137}, {103, 103, 532}, {104, 122, 90}, },
            {{48, 100, -35}, {101, 101, 533}, {102, 122, 90}, },
            {{48, 116, -108}, {117, 117, 534}, {118, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 115, -98}, {116, 116, 535}, {117, 122, 90}, },
            {{48, 113, -45}, {114, 114, 536}, {115, 122, 90}, },
            {{48, 100, -35}, {101, 101, 537}, {102, 122, 90}, },
            {{48, 104, -117}, {105, 105, 538}, {106, 122, 90}, },
            {{0, 255, -9}, },
            {{0, 47, -156}, {48, 57, 539}, {58, 64, 56}, {65, 70, 540}, {71, 96, -295}, {97, 102, 541}, {103, 255, 56}, },
            {{0, 255, -434}, },
            {{0, 255, -434}, },
            {{0, 255, -9}, },
            {{0, 255, -9}, },
            {{0, 255, -9}, },
            {{110, 110, 542}, },
            {{102, 102, 543}, },
            {{101, 101, 544}, },
            {{117, 117, 545}, },
            {{109, 109, 546}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, {48, 57, 547}, {65, 70, 548}, {97, 102, 549}, },
            {{39, 102, -446}, },
            {{39, 102, -446}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, },
            {{0, 9, 550}, {10, 10, 551}, {11, 12, 550}, {13, 13, 552}, {14, 41, 550}, {42, 42, 553}, {43, 255, 550}, },
            {{0, 255, -452}, },
            {{0, 9, 550}, {10, 10, 554}, {11, 255, -452}, },
            {},
            {{0, 255, -318}, },
            {{0, 255, -318}, },
            {{0, 9, 454}, {10, 10, 555}, {11, 255, -318}, },
            {{0, 41, -197}, {42, 42, 457}, {43, 255, -197}, },
            {{0, 255, -318}, },
            {{0, 47, -329}, {48, 55, 556}, {56, 65535, -329}, },
            {{0, 47, -329}, {48, 57, 557}, {58, 64, 210}, {65, 70, 558}, {71, 91, 210}, {92, 92, 212}, {93, 96, 210}, {97, 102, 559}, {103, 65535, 210}, },
            {{0, 65535, -462}, },
            {{0, 65535, -462}, },
            {{0, 47, -329}, {48, 57, 560}, {58, 64, 210}, {65, 70, 561}, {71, 96, -462}, {97, 102, 562}, {103, 65535, 210}, },
            {{0, 65535, -465}, },
            {{0, 65535, -465}, },
            {{39, 39, 340}, {48, 55, 563}, },
            {{39, 39, 340}, {48, 57, 564}, {65, 70, 565}, {97, 102, 566}, },
            {{39, 102, -469}, },
            {{39, 102, -469}, },
            {{39, 39, 340}, {48, 57, 567}, {65, 70, 568}, {97, 102, 569}, },
            {{39, 102, -472}, },
            {{39, 102, -472}, },
            {{48, 95, -28}, {97, 97, 570}, {98, 122, 90}, },
            {{48, 97, -32}, {98, 98, 571}, {99, 122, 90}, },
            {{48, 95, -28}, {97, 97, 572}, {98, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 90, -28}, {95, 95, 573}, {97, 122, 90}, },
            {{48, 119, -114}, {120, 120, 574}, {121, 122, 90}, },
            {{48, 109, -49}, {110, 110, 575}, {111, 122, 90}, },
            {{48, 108, -97}, {109, 109, 576}, {110, 122, 90}, },
            {{48, 107, -36}, {108, 108, 577}, {109, 122, 90}, },
            {{48, 100, -35}, {101, 101, 578}, {102, 122, 90}, },
            {{48, 100, -35}, {101, 101, 579}, {102, 122, 90}, },
            {{48, 104, -117}, {105, 105, 580}, {106, 122, 90}, },
            {{48, 115, -98}, {116, 116, 581}, {117, 122, 90}, },
            {{48, 98, -51}, {99, 99, 582}, {100, 122, 90}, },
            {{48, 115, -98}, {116, 116, 583}, {117, 122, 90}, },
            {{48, 109, -49}, {110, 110, 584}, {111, 122, 90}, },
            {{48, 113, -45}, {114, 114, 585}, {115, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 99, -111}, {100, 100, 586}, {101, 122, 90}, },
            {{48, 100, -35}, {101, 101, 587}, {102, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 101, -40}, {102, 102, 588}, {103, 122, 90}, },
            {{48, 100, -35}, {101, 101, 589}, {102, 122, 90}, },
            {{48, 107, -36}, {108, 108, 590}, {109, 122, 90}, },
            {{48, 111, -139}, {112, 112, 591}, {113, 122, 90}, },
            {{48, 100, -35}, {101, 101, 592}, {102, 122, 90}, },
            {{48, 115, -98}, {116, 116, 593}, {117, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 120, -96}, {121, 121, 594}, {122, 122, 90}, },
            {{48, 115, -98}, {116, 116, 595}, {117, 122, 90}, },
            {{48, 115, -98}, {116, 116, 596}, {117, 122, 90}, },
            {{48, 98, -51}, {99, 99, 597}, {100, 122, 90}, },
            {{48, 98, -51}, {99, 99, 598}, {100, 122, 90}, },
            {{48, 114, -95}, {115, 115, 599}, {116, 122, 90}, },
            {{48, 109, -49}, {110, 110, 600}, {111, 122, 90}, },
            {{48, 115, -98}, {116, 116, 601}, {117, 122, 90}, },
            {{48, 100, -35}, {101, 101, 602}, {102, 122, 90}, },
            {{48, 109, -49}, {110, 110, 603}, {111, 122, 90}, },
            {{48, 109, -49}, {110, 110, 604}, {111, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 99, -111}, {100, 100, 605}, {101, 122, 90}, },
            {{48, 101, -40}, {102, 102, 606}, {103, 122, 90}, },
            {{48, 98, -51}, {99, 99, 607}, {100, 122, 90}, },
            {{48, 102, -137}, {103, 103, 608}, {104, 122, 90}, },
            {{48, 115, -98}, {116, 116, 609}, {117, 122, 90}, },
            {{48, 113, -45}, {114, 114, 610}, {115, 122, 90}, },
            {{48, 103, -150}, {104, 104, 611}, {105, 122, 90}, },
            {{48, 95, -28}, {97, 97, 612}, {98, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 95, -28}, {97, 97, 613}, {98, 122, 90}, },
            {{48, 100, -35}, {101, 101, 614}, {102, 122, 90}, },
            {{48, 99, -111}, {100, 100, 615}, {101, 122, 90}, },
            {{48, 95, -28}, {97, 97, 616}, {98, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 109, -49}, {110, 110, 617}, {111, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 97, -32}, {98, 98, 618}, {99, 115, 90}, {116, 116, 619}, {117, 122, 90}, },
            {{48, 95, -28}, {97, 97, 620}, {98, 122, 90}, },
            {{48, 104, -117}, {105, 105, 621}, {106, 122, 90}, },
            {{48, 90, -28}, {95, 95, 622}, {97, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 109, -49}, {110, 110, 623}, {111, 122, 90}, },
            {{0, 47, -156}, {48, 57, 624}, {58, 64, 56}, {65, 70, 625}, {71, 96, -295}, {97, 102, 626}, {103, 255, 56}, },
            {{0, 255, -541}, },
            {{0, 255, -541}, },
            {{101, 101, 627}, },
            {{0, 9, 628}, {10, 10, 629}, {11, 12, 628}, {13, 13, 630}, {14, 255, 628}, },
            {{102, 102, 631}, },
            {{100, 100, 632}, },
            {{97, 97, 633}, },
            {{39, 39, 172}, {48, 57, 634}, {65, 70, 635}, {97, 102, 636}, },
            {{39, 102, -549}, },
            {{39, 102, -549}, },
            {{0, 255, -452}, },
            {{0, 255, -452}, },
            {{0, 9, 550}, {10, 10, 637}, {11, 255, -452}, },
            {{0, 41, -316}, {42, 42, 553}, {43, 255, -316}, },
            {{0, 255, -452}, },
            {{0, 255, -318}, },
            {{0, 65535, -93}, },
            {{0, 47, -329}, {48, 57, 638}, {58, 64, 210}, {65, 70, 639}, {71, 96, -462}, {97, 102, 640}, {103, 65535, 210}, },
            {{0, 65535, -559}, },
            {{0, 65535, -559}, },
            {{0, 65535, -93}, },
            {{0, 65535, -93}, },
            {{0, 65535, -93}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, {48, 57, 641}, {65, 70, 642}, {97, 102, 643}, },
            {{39, 102, -566}, },
            {{39, 102, -566}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, },
            {{48, 98, -51}, {99, 99, 644}, {100, 122, 90}, },
            {{48, 116, -108}, {117, 117, 645}, {118, 122, 90}, },
            {{48, 109, -49}, {110, 110, 646}, {111, 122, 90}, },
            {{48, 98, -51}, {99, 99, 647}, {100, 122, 90}, },
            {{48, 115, -98}, {116, 116, 648}, {117, 122, 90}, },
            {{48, 116, -108}, {117, 117, 649}, {118, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 115, -98}, {116, 116, 650}, {117, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 98, -51}, {99, 99, 651}, {100, 122, 90}, },
            {{48, 104, -117}, {105, 105, 652}, {106, 122, 90}, },
            {{48, 104, -117}, {105, 105, 653}, {106, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 120, -96}, {121, 121, 654}, {122, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 95, -28}, {97, 97, 655}, {98, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 656}, {102, 122, 90}, },
            {{48, 95, -28}, {97, 97, 657}, {98, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 110, -33}, {111, 111, 658}, {112, 122, 90}, },
            {{48, 100, -35}, {101, 101, 659}, {102, 122, 90}, },
            {{48, 115, -98}, {116, 116, 660}, {117, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 107, -36}, {108, 108, 661}, {109, 122, 90}, },
            {{48, 100, -35}, {101, 101, 662}, {102, 122, 90}, },
            {{48, 113, -45}, {114, 114, 663}, {115, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 98, -51}, {99, 99, 664}, {100, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 90, -28}, {95, 95, 665}, {97, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 115, -98}, {116, 116, 666}, {117, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 115, -98}, {116, 116, 667}, {117, 122, 90}, },
            {{48, 115, -98}, {116, 116, 668}, {117, 122, 90}, },
            {{48, 101, -40}, {102, 102, 669}, {103, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 108, -97}, {109, 109, 670}, {110, 122, 90}, },
            {{48, 100, -35}, {101, 101, 671}, {102, 122, 90}, },
            {{48, 95, -28}, {97, 97, 672}, {98, 122, 90}, },
            {{48, 120, -96}, {121, 121, 673}, {122, 122, 90}, },
            {{48, 107, -36}, {108, 108, 674}, {109, 122, 90}, },
            {{48, 107, -36}, {108, 108, 675}, {109, 122, 90}, },
            {{48, 115, -98}, {116, 116, 676}, {117, 122, 90}, },
            {{48, 102, -137}, {103, 103, 677}, {104, 122, 90}, },
            {{0, 255, -9}, },
            {{0, 255, -9}, },
            {{0, 255, -9}, },
            {{0, 255, -545}, },
            {{0, 255, -545}, },
            {},
            {{10, 10, 678}, },
            {{0, 255, -545}, },
            {{101, 101, 679}, },
            {{0, 255, -545}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, },
            {{39, 39, 172}, },
            {{0, 255, -452}, },
            {{0, 47, -329}, {48, 57, 680}, {58, 64, 210}, {65, 70, 681}, {71, 96, -462}, {97, 102, 682}, {103, 65535, 210}, },
            {{0, 65535, -640}, },
            {{0, 65535, -640}, },
            {{39, 39, 340}, {48, 57, 683}, {65, 70, 684}, {97, 102, 685}, },
            {{39, 102, -643}, },
            {{39, 102, -643}, },
            {{48, 115, -98}, {116, 116, 686}, {117, 122, 90}, },
            {{48, 115, -98}, {116, 116, 687}, {117, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 95, -28}, {97, 97, 688}, {98, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 689}, {102, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 90, -28}, {95, 95, 690}, {97, 122, 90}, },
            {{48, 110, -33}, {111, 111, 691}, {112, 122, 90}, },
            {{48, 115, -98}, {116, 116, 692}, {117, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 98, -51}, {99, 99, 693}, {100, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 98, -51}, {99, 99, 694}, {100, 122, 90}, },
            {{48, 113, -45}, {114, 114, 695}, {115, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 696}, {102, 122, 90}, },
            {{48, 120, -96}, {121, 121, 697}, {122, 122, 90}, },
            {{48, 113, -45}, {114, 114, 698}, {115, 122, 90}, },
            {{48, 111, -139}, {112, 112, 699}, {113, 122, 90}, },
            {{48, 100, -35}, {101, 101, 700}, {102, 122, 90}, },
            {{48, 98, -51}, {99, 99, 701}, {100, 122, 90}, },
            {{48, 114, -95}, {115, 115, 702}, {116, 122, 90}, },
            {{48, 100, -35}, {101, 101, 703}, {102, 122, 90}, },
            {{48, 95, -28}, {97, 97, 704}, {98, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 705}, {102, 122, 90}, },
            {{48, 99, -111}, {100, 100, 706}, {101, 122, 90}, },
            {{48, 114, -95}, {115, 115, 707}, {116, 122, 90}, },
            {{48, 111, -139}, {112, 112, 708}, {113, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 709}, {102, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {},
            {{0, 255, -545}, },
            {{0, 65535, -93}, },
            {{0, 65535, -93}, },
            {{0, 65535, -93}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, },
            {{39, 39, 340}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 710}, {102, 122, 90}, },
            {{48, 114, -95}, {115, 115, 711}, {116, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 98, -51}, {99, 99, 712}, {100, 122, 90}, },
            {{48, 109, -49}, {110, 110, 713}, {111, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 714}, {102, 122, 90}, },
            {{48, 100, -35}, {101, 101, 715}, {102, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 99, -111}, {100, 100, 716}, {101, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 113, -45}, {114, 114, 717}, {115, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 95, -28}, {97, 97, 718}, {98, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 97, -32}, {98, 98, 719}, {99, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 720}, {102, 122, 90}, },
            {{48, 100, -35}, {101, 101, 721}, {102, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 115, -98}, {116, 116, 722}, {117, 122, 90}, },
            {{48, 95, -28}, {97, 97, 723}, {98, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 100, -35}, {101, 101, 724}, {102, 122, 90}, },
            {{48, 114, -95}, {115, 115, 725}, {116, 122, 90}, },
            {{48, 107, -36}, {108, 108, 726}, {109, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 114, -95}, {115, 115, 727}, {116, 122, 90}, },
            {{48, 115, -98}, {116, 116, 728}, {117, 122, 90}, },
            {{48, 115, -98}, {116, 116, 729}, {117, 122, 90}, },
            {{48, 100, -35}, {101, 101, 730}, {102, 122, 90}, },
            {{48, 115, -98}, {116, 116, 731}, {117, 122, 90}, },
            {{48, 90, -28}, {95, 95, 732}, {97, 122, 90}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 122, -28}, },
            {{48, 98, -51}, {99, 99, 733}, {100, 122, 90}, },
            {{48, 95, -28}, {97, 97, 734}, {98, 122, 90}, },
            {{48, 114, -95}, {115, 115, 735}, {116, 122, 90}, },
            {{48, 115, -98}, {116, 116, 736}, {117, 122, 90}, },
            {{48, 122, -28}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {11, 11, 11, 11, 11, 11, 10, -1, -1, 10, 10, -1, 5, 6, 10, 10, 10, 10, 10, 10, 8, 8, 10, 10, 10, -1, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 3, 10, 4, 10, 11, 10, -1, 9, -1, -1, -1, -1, -1, 10, -1, -1, 10, 10, 8, -1, 2, 8, 8, -1, 8, -1, -1, 8, -1, -1, 8, 10, 10, 10, 10, 10, 10, 12, 12, 12, 12, -1, -1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, -1, 8, -1, -1, -1, -1, -1, 2, 2, 2, 8, 8, -1, 8, -1, -1, -1, 8, 8, 8, 8, -1, 9, -1, -1, -1, 12, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 7, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, -1, -1, -1, -1, -1, -1, 1, 2, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 12, 10, 7, 12, 10, 12, 7, 12, 12, 12, 10, 12, 12, 12, 12, 12, 10, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 10, 12, 12, 12, 12, 12, 12, 12, 7, 12, 12, 12, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 12, 12, 10, 10, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 10, 7, 12, 12, 10, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 10, 12, 10, 12, 12, 12, 7, 10, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 12, 12, 12, 12, 12, 10, 12, 10, 7, 12, 12, 12, 10, 10, 12, 10, 10, 12, 10, 12, 12, 10, 10, 10, 12, 12, 12, 10, 10, 12, 12, 12, 10, 12, 10, 10, 10, 7, 10, 12, 10, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, -1, -1, -1, -1, -1, 10, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 12, 7, 12, 10, 12, 10, 12, 12, 12, 10, 12, 10, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 10, 12, 7, 7, 10, -1, -1, -1, -1, -1, -1, -1, 10, 12, 12, 10, 12, 12, 10, 12, 12, 10, 12, 10, 10, 12, 10, 12, 10, 10, 12, 10, 10, 12, 12, 10, 10, 12, 12, 10, 10, 10, 10, 12, 12, 12, 10, 10, 10, 12, 12, 12, 12, 12, 12, 10, 10, 10, 12, 12, 12, 12, 10, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
